{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","TodoList","todos","map","username","userId","App","todosWithUsers","todosFromServer","usersFromServer","find","u","useState","setTodos","setTitle","setUserId","titleError","setTitleError","userError","setUserError","onSubmit","event","preventDefault","error","trim","Number","prevTodos","newTodo","reduce","max","addTodo","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afa01928.chunk.js","sourcesContent":["export interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface UserInfoProps {\n  user: User | null | undefined;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  if (!user) {\n    return <div>No user data available.</div>;\n  }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { UserInfo, User } from '../UserInfo/UserInfo';\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  user?: User | null;\n}\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoInfo, Todo } from '../TodoInfo/TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { SetStateAction, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/TodoInfo/TodoInfo';\n\nexport const App = () => {\n  const todosWithUsers = todosFromServer.map(todo => {\n    const user = usersFromServer.find(u => u.id === todo.userId) || null;\n\n    return {\n      ...todo,\n      user,\n    };\n  });\n\n  const [todos, setTodos] = useState<Todo[]>(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [userError, setUserError] = useState('');\n\n  const handleTitleChange = (event:\n  { target: { value: SetStateAction<string>; }; }) => {\n    setTitle(event.target.value);\n    if (titleError) {\n      setTitleError('');\n    }\n  };\n\n  const handleUserChange = (event:\n  { target: { value: SetStateAction<string>; }; }) => {\n    setUserId(event.target.value);\n    if (userError) {\n      setUserError('');\n    }\n  };\n\n  const addTodo = () => {\n    const user = usersFromServer.find(u => u.id === Number(userId));\n\n    if (!user) {\n      setUserError('User not found');\n\n      return;\n    }\n\n    setTodos(prevTodos => {\n      const maxId = prevTodos.reduce((max, todo) => {\n        return todo.id > max ? todo.id : max;\n      }, 0);\n\n      const newTodo = {\n        id: maxId + 1,\n        title,\n        user,\n        completed: false,\n      };\n\n      return [...prevTodos, newTodo];\n    });\n\n    setTitle('');\n    setUserId('');\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    let error = false;\n\n    if (!title.trim()) {\n      setTitleError('Please enter a title');\n      error = true;\n    }\n\n    if (!userId) {\n      setUserError('Please choose a user');\n      error = true;\n    }\n\n    if (!error) {\n      addTodo();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          Title: &nbsp;\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          User:&nbsp;\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}